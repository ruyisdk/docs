"use strict";(self.webpackChunkruyisdk=self.webpackChunkruyisdk||[]).push([[6262],{3952:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>d,metadata:()=>t,toc:()=>u});var s=i(4848),r=i(8453);const d={},l="Milkv Duo: Kompilierung, Ausf\xfchrung und Debugging mit dem riscv64-unknown-linux-musl-bin Toolchain",t={id:"IDE/cases/milkv-duo-ide",title:"Milkv Duo: Kompilierung, Ausf\xfchrung und Debugging mit dem riscv64-unknown-linux-musl-bin Toolchain",description:"Aufbau der Entwicklungsumgebung",source:"@site/i18n/de/docusaurus-plugin-content-docs/current/IDE/cases/milkv-duo-ide.md",sourceDirName:"IDE/cases",slug:"/IDE/cases/milkv-duo-ide",permalink:"/docs/de/docs/IDE/cases/milkv-duo-ide",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u4f7f\u7528\u6848\u4f8b",permalink:"/docs/de/docs/category/\u4f7f\u7528\u6848\u4f8b-1"},next:{title:"\u5176\u4ed6\u8bf4\u660e",permalink:"/docs/de/docs/category/\u5176\u4ed6\u8bf4\u660e"}},a={},u=[{value:"Aufbau der Entwicklungsumgebung",id:"aufbau-der-entwicklungsumgebung",level:2},{value:"Entwicklung in der IDE",id:"entwicklung-in-der-ide",level:2},{value:"Vorbereitung des Quellcodes",id:"vorbereitung-des-quellcodes",level:3},{value:"Importieren und Einstellen der Projekteigenschaften",id:"importieren-und-einstellen-der-projekteigenschaften",level:3},{value:"Ausf\xfchrung des Builds",id:"ausf\xfchrung-des-builds",level:3},{value:"\xdcbertragung des Zielprogramms auf das Zielger\xe4t",id:"\xfcbertragung-des-zielprogramms-auf-das-zielger\xe4t",level:3},{value:"Ausf\xfchrung des Zielprogramms und R\xfcckmeldung der Ausf\xfchrungsergebnisse",id:"ausf\xfchrung-des-zielprogramms-und-r\xfcckmeldung-der-ausf\xfchrungsergebnisse",level:3},{value:"SSH-Terminal",id:"ssh-terminal",level:4},{value:"C/C++ Remote-Anwendung",id:"cc-remote-anwendung",level:4},{value:"Debugging",id:"debugging",level:3},{value:"Vorbereitung des Debugging-Beispiels",id:"vorbereitung-des-debugging-beispiels",level:4},{value:"Vorbereitung des gdbserver",id:"vorbereitung-des-gdbserver",level:4},{value:"Debugging im Terminal",id:"debugging-im-terminal",level:4},{value:"C/C++ Remote-Anwendung",id:"cc-remote-anwendung-1",level:4},{value:"Zus\xe4tzliche Hinweise",id:"zus\xe4tzliche-hinweise",level:2},{value:"SSH-Schl\xfcsselkonfiguration",id:"ssh-schl\xfcsselkonfiguration",level:3}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"milkv-duo-kompilierung-ausf\xfchrung-und-debugging-mit-dem-riscv64-unknown-linux-musl-bin-toolchain",children:"Milkv Duo: Kompilierung, Ausf\xfchrung und Debugging mit dem riscv64-unknown-linux-musl-bin Toolchain"}),"\n",(0,s.jsx)(n.h2,{id:"aufbau-der-entwicklungsumgebung",children:"Aufbau der Entwicklungsumgebung"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Installieren Sie den RuyiSDK Paketmanager ",(0,s.jsx)(n.a,{href:"/docs/Package-Manager/installation",children:"Referenz"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Installieren Sie den gnu-milkv-milkv-duo-musl Compiler"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \xdcberpr\xfcfen Sie die Ressourcen des Software-Repositorys\nruyi list\n\n# Installieren Sie die angegebene Toolchain\nruyi install gnu-milkv-milkv-duo-bin\n\n# Aus den R\xfcckgabedaten k\xf6nnen Sie den Installationspfad einsehen, z.B. ~/.local/share/ruyi/binaries/x86_64/gnu-milkv-milkv-duo-bin-0.20240731.0+git.67688c7335e7\n\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Erstellen und verwenden Sie die Duo-Kompilierungsumgebung"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# \xdcberpr\xfcfen Sie die vordefinierten Umgebungen von ruyi\n# ruyi list profiles\n\n# Erstellen Sie eine virtuelle Umgebung: Toolchain ist gnu-milkv-milkv-duo-musl-bin\nruyi venv -t gnu-milkv-milkv-duo-musl-bin milkv-duo ./venv-milkvduo\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"entwicklung-in-der-ide",children:"Entwicklung in der IDE"}),"\n",(0,s.jsx)(n.h3,{id:"vorbereitung-des-quellcodes",children:"Vorbereitung des Quellcodes"}),"\n",(0,s.jsx)(n.p,{children:"Dieser Artikel verwendet das Anwendungsbeispiel duo-examples des milkv-duo Entwicklungskits. Verwenden Sie eine der folgenden Methoden, um den Quellcode zu erhalten:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"\n# Methode 1: git clone\n\ngit clone https://github.com/milkv-duo/duo-examples.git\n\n\n# Methode 2: ruyi extract Befehl herunterladen\n\nruyi extract milkv-duo-examples\n\n"})}),"\n",(0,s.jsx)(n.h3,{id:"importieren-und-einstellen-der-projekteigenschaften",children:"Importieren und Einstellen der Projekteigenschaften"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Datei > Neu > Projekt"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735624096763",src:i(7582).A+"",width:"845",height:"381"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"W\xe4hlen Sie C/C++ > Makefile-Projekt mit bestehendem Code > Weiter"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735623999135",src:i(2348).A+"",width:"615",height:"621"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Importieren Sie den vorbereiteten Quellcode:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Klicken Sie auf Durchsuchen > Ziel-Quellcode-Pfad"}),"\n",(0,s.jsx)(n.li,{children:"Toolchain f\xfcr Indexer-Einstellungen: W\xe4hlen Sie RISC-V Cross GCC"}),"\n",(0,s.jsx)(n.li,{children:"Fertigstellen"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735624436834",src:i(1643).A+"",width:"615",height:"651"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Projekt hello-world > Rechtsklick > Eigenschaften konfigurieren"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Konfigurieren Sie den Toolchain-Pfad f\xfcr das Projekt"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735624925007",src:i(34).A+"",width:"1285",height:"865"})}),"\n",(0,s.jsx)(n.p,{children:"W\xe4hlen Sie den Pfad, in dem der Compiler zuvor mit ruyi install installiert wurde (standardm\xe4\xdfig im Pfad ~/.local/share/ruyi/binaries/x86_64/), oder das bin-Verzeichnis der erstellten virtuellen Umgebung;"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Setzen Sie die Kompilationseigenschaften"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735625245878",src:i(1498).A+"",width:"1301",height:"869"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Bearbeiten Sie die Makefile"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Der korrekte Betrieb des mitgelieferten Makefile des Projekts h\xe4ngt von der vorherigen Einstellung der Umgebungsvariablen durch das Skript envsetup.sh ab. In der vorherigen ",(0,s.jsx)(n.a,{href:"https://github.com/milkv-duo/duo-examples/blob/main/README-zh.md",children:"Dokumentationspraxis des Herstellers"})," haben wir erfahren, dass der Compiler-Pr\xe4fix, die Kompilierungsoptionen, die Linkparameter usw. im Voraus festgelegt wurden. Um die Handhabung zu erleichtern, werden diese Informationen in das Makefile geschrieben. Beachten Sie, dass der TOOLCHAIN_PREFIX-Pfad nach Bedarf ge\xe4ndert werden muss."]}),"\n",(0,s.jsxs)(n.li,{children:["Kompilierungsparameter:","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"-mcpu=c906fdv: Gibt das Modell der Ziel-CPU beim Cross-Compiling an"}),"\n",(0,s.jsx)(n.li,{children:"-march=rv64imafdcv0p7xthead: Gibt die Zielarchitektur beim Cross-Compiling an"}),"\n",(0,s.jsx)(n.li,{children:"-g: Generiert Debugging-Informationen"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.li,{children:'Um die automatische Kopie vom Build zum Zielprogramm auf das Zielger\xe4t zu realisieren, wurde im Makefile auch das Upload-Ziel hinzugef\xfcgt (dies setzt voraus, dass die SSH-Authentifizierung zwischen PC und Zielger\xe4t abgeschlossen ist; bitte beachten Sie die "SSH-Schl\xfcsselkonfiguration" am Ende). Au\xdferdem m\xfcssen die entsprechenden Verzeichnisse auf dem Zielger\xe4t im Voraus erstellt werden (der Speicherort kann angepasst werden, aber bitte \xe4ndern Sie den Pfad nach dem scp-Befehl, um sicherzustellen, dass er mit der tats\xe4chlichen Umgebung \xfcbereinstimmt).'}),"\n",(0,s.jsx)(n.li,{children:"Sie k\xf6nnen das folgende Makefile weiter anpassen; dieser Artikel bietet nur einen Referenzansatz."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-makefile",children:"# Eclipse Toolchain Einstellungen\n#TOOLCHAIN_PREFIX := ~/milkv/duo/duo-examples/host-tools/gcc/riscv64-linux-musl-x86_64/bin/riscv64-unknown-linux-musl-\nTOOLCHAIN_PREFIX := ~/.local/share/ruyi/binaries/x86_64/gnu-milkv-milkv-duo-musl-bin-0.20240731.0+git.67688c7335e7/bin/riscv64-unknown-linux-musl-\n\n# Kompilierungsoptionen -O3  \n#CFLAGS := -mcpu=c906fdv -march=rv64imafdcv0p7xthead -mcmodel=medany -mabi=lp64d -DNDEBUG -I/home/phebe/milkv/duo/duo-examples/include/system\n#LDFLAGS := -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -L/home/phebe/milkv/duo/duo-examples/libs/system/musl_riscv64\nCFLAGS := -mcpu=c906fdv -march=rv64imafdcv0p7xthead -g  #-mcpu=c906fdv -march=rv64imafdcv0p7xthead : Eines von beiden muss gesetzt werden\nLDFLAGS := \n\nTARGET=helloworld\n\nifeq (,$(TOOLCHAIN_PREFIX))\n$(error TOOLCHAIN_PREFIX ist nicht gesetzt)\nendif\n\nifeq (,$(CFLAGS))\n$(error CFLAGS ist nicht gesetzt)\nendif\n\nCC = $(TOOLCHAIN_PREFIX)gcc\n\nSOURCE = $(wildcard *.c)\nOBJS = $(patsubst %.c,%.o,$(SOURCE))\n\n# Standardziel\nall: $(TARGET)\n\n$(TARGET): $(OBJS)\n\t$(CC) $(CFLAGS) -o $@ $(OBJS) $(LDFLAGS)\n\n%.o: %.c\n\t$(CC) $(CFLAGS) -o $@ -c $<\n\n# Upload-Ziel\nupload: $(TARGET)\n\tscp $(TARGET) root@192.168.42.1:/root/target/$(TARGET)\n\n.PHONY: clean upload\nclean:\n\trm -f *.o $(TARGET)\n\n# Lassen Sie das 'all' Ziel von 'upload' abh\xe4ngen, um es nach dem Build automatisch hochzuladen\nall: upload\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"\xd6ffnen Sie das Terminalfenster in der IDE und erstellen Sie ein SSH-Terminal, um sich bequem in das Zielger\xe4t einzuloggen und relevante Operationen durchzuf\xfchren. Wenn n\xf6tig, k\xf6nnen Sie auch ein zus\xe4tzliches lokales Terminalfenster erstellen. Dies h\xe4ngt von Ihren pers\xf6nlichen Vorlieben ab. Die spezifischen Schritte sind:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Fenster > Ansicht anzeigen > Terminal"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Terminal: \xd6ffnen Sie eine neue Terminalansicht / \xd6ffnen Sie ein Terminal > SSH-Terminal > Geben Sie Host, Benutzer, Passwort (das root-Passwort von milkvduo ist: milkv) gem\xe4\xdf dem Bild unten ein"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735626678903",src:i(8786).A+"",width:"545",height:"537"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735626740680",src:i(2886).A+"",width:"937",height:"333"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735626766840",src:i(408).A+"",width:"355",height:"555"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1735626979037",src:i(2780).A+"",width:"933",height:"295"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Erstellen Sie im Voraus den \xdcbertragungsweg f\xfcr die Zieldatei gem\xe4\xdf dem Pfad im scp-Befehl im Makefile. (Nach dem Build wird das Zielprogramm im Verzeichnis erscheinen)"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736776549440",src:i(5946).A+"",width:"681",height:"303"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ausf\xfchrung-des-builds",children:"Ausf\xfchrung des Builds"}),"\n",(0,s.jsx)(n.p,{children:'Nachdem Sie die oben genannten Konfigurationen und \xc4nderungen vorgenommen haben, klicken Sie mit der rechten Maustaste auf das Projekt und w\xe4hlen Sie "Projekt erstellen". Wenn der Build erfolgreich ist:'}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Das Konsolenfenster zeigt keine Fehler an"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736776684233",src:i(1464).A+"",width:"973",height:"396"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Im SSH-Terminalfenster k\xf6nnen Sie das erfolgreich \xfcbertragene Zielprogramm helloworld sehen"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736776707622",src:i(4228).A+"",width:"691",height:"298"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"\xfcbertragung-des-zielprogramms-auf-das-zielger\xe4t",children:"\xdcbertragung des Zielprogramms auf das Zielger\xe4t"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:'Wenn im Makefile das Upload-Ziel definiert ist, wurde das Zielprogramm bereits w\xe4hrend des oben genannten "Projekt erstellen" \xfcbertragen.'}),"\n",(0,s.jsxs)(n.li,{children:["Wenn im Makefile das Upload-Ziel nicht definiert ist, k\xf6nnen Sie den Befehl ",(0,s.jsx)(n.code,{children:"scp helloworld root@192.168.42.1:/root/target/"})," manuell ausf\xfchren, um das Zielprogramm zu \xfcbertragen."]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"ausf\xfchrung-des-zielprogramms-und-r\xfcckmeldung-der-ausf\xfchrungsergebnisse",children:"Ausf\xfchrung des Zielprogramms und R\xfcckmeldung der Ausf\xfchrungsergebnisse"}),"\n",(0,s.jsx)(n.p,{children:"In der IDE gibt es verschiedene M\xf6glichkeiten, das Zielprogramm auszuf\xfchren. Sie k\xf6nnen je nach Gewohnheit und Bedarf w\xe4hlen. Hier sind einige Methoden, die ich ausprobiert habe; weitere Methoden sind herzlich willkommen, gemeinsam erkundet zu werden."}),"\n",(0,s.jsx)(n.h4,{id:"ssh-terminal",children:"SSH-Terminal"}),"\n",(0,s.jsx)(n.p,{children:"Sie k\xf6nnen das Zielprogramm helloworld im SSH-Terminalfenster anzeigen und ausf\xfchren:"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736777304796",src:i(2720).A+"",width:"641",height:"316"})}),"\n",(0,s.jsx)(n.h4,{id:"cc-remote-anwendung",children:"C/C++ Remote-Anwendung"}),"\n",(0,s.jsx)(n.p,{children:"Vorgehensweise: Rechtsklick auf das Projekt > Ausf\xfchren als > Ausf\xfchrungs-Konfigurationen > C/C++ Remote-Anwendung"}),"\n",(0,s.jsx)(n.p,{children:"Vergleichen Sie die folgenden Bilder (die Bilder sind im Debug-Modus aufgenommen; da die Konfigurationen identisch sind, werden die Punkte anhand des Debug-Bildes erl\xe4utert), und passen Sie die relevanten Parameter an, wobei die folgenden Punkte wichtig sind:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Projekt: Standardm\xe4\xdfig der Name des Zielprogramms"}),"\n",(0,s.jsx)(n.li,{children:"C/C++ Anwendung: Auch standardm\xe4\xdfig der Name des Zielprogramms (Suchprojekt zur Abfrage)"}),"\n",(0,s.jsx)(n.li,{children:"Verbindung: Neu > SSH"}),"\n",(0,s.jsx)(n.li,{children:"Remote-Absolute-Dateipfad f\xfcr C/C++ Anwendung: Geben Sie die absolute Adresse des Zielprogramms auf dem RISC-V-Ger\xe4t ein (in diesem Beispiel muss dies mit dem Pfad im scp-Befehl im Makefile \xfcbereinstimmen)"}),"\n",(0,s.jsx)(n.li,{children:"Zielpfad-Download \xfcberspringen: In der aktuellen Version wird empfohlen, dies zu aktivieren und zusammen mit dem im Makefile definierten Upload-Ziel zu verwenden, um das Zielprogramm vom Host auf das Ziel-Entwicklungskit zu \xfcbertragen. Dies liegt daran, dass ohne Aktivierung das IDE das RSE (Remote System Explorer) Plugin installieren muss und das Zielger\xe4tesystem sftp-server unterst\xfctzen muss. Derzeit unterst\xfctzt milkvduo kein sftp-server, daher ist diese Funktion vor\xfcbergehend nicht verf\xfcgbar."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736321809187",src:i(8431).A+"",width:"1751",height:"877"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736320799175",src:i(8685).A+"",width:"643",height:"518"})}),"\n",(0,s.jsx)(n.p,{children:"Ausf\xfchrungsbeispiel:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(8292).A+"",children:'Erfolgreiche Ausf\xfchrung mit aktivierter Option "Zielpfad-Download \xfcberspringen"'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(8292).A+"",children:'Fehler bei der Ausf\xfchrung ohne Aktivierung der Option "Zielpfad-Download \xfcberspringen"'})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Das milkv duo-Image unterst\xfctzt derzeit kein sftp: ",(0,s.jsx)(n.a,{href:"https://github.com/milkv-duo/duo-buildroot-sdk/issues/167",children:"https://github.com/milkv-duo/duo-buildroot-sdk/issues/167"}),". Dieses Problem kann behoben werden, wenn das milkvduo-Image sftp-server unterst\xfctzt."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"debugging",children:"Debugging"}),"\n",(0,s.jsx)(n.h4,{id:"vorbereitung-des-debugging-beispiels",children:"Vorbereitung des Debugging-Beispiels"}),"\n",(0,s.jsx)(n.p,{children:"Die Debugging-Ergebnisse des helloworld-Beispiels sind nicht optimal. Um die Funktionen des Debuggings, des Setzens von Haltepunkten und des schrittweisen Verfolgens zu demonstrieren, verwenden wir hier ein anderes Beispiel."}),"\n",(0,s.jsx)(n.p,{children:"sumdemo.c"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:'\n#include <stdio.h>\n\n\nint Sum(int s, int e)\n\n{\n\n    int result = 0;\n\n    for(int i = s; i <= e; i++)\n\n    {\n\n        result += i;\n\n    }\n\n    return result;\n\n}\n\n\nint main()\n\n{\n\n    int start = 1;\n\n    int end = 10;\n\n    printf("Ich werde beginnen\\n");\n\n    int n = Sum(start, end);\n\n    printf("Ausf\xfchrung abgeschlossen, Ergebnis ist: [%d-%d]=%d\\n", start, end, n);\n\n    return 0;\n\n}\n\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"Makefile:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-makefile",children:"\n# Eclipse Toolchain Einstellungen\n#TOOLCHAIN_PREFIX := ~/milkv/duo/duo-examples/host-tools/gcc/riscv64-linux-musl-x86_64/bin/riscv64-unknown-linux-musl-\nTOOLCHAIN_PREFIX := ~/.local/share/ruyi/binaries/x86_64/gnu-milkv-milkv-duo-musl-bin-0.20240731.0+git.67688c7335e7/bin/riscv64-unknown-linux-musl-\n\n\n# Kompilierungsoptionen -O3   -static\n#CFLAGS := -mcpu=c906fdv -march=rv64imafdcv0p7xthead -mcmodel=medany -mabi=lp64d -DNDEBUG -I~/milkv/duo/duo-examples/include/system\n#LDFLAGS := -D_LARGEFILE_SOURCE -D_LARGEFILE64_SOURCE -D_FILE_OFFSET_BITS=64 -L/home/phebe/milkv/duo/duo-examples/libs/system/musl_riscv64\nCFLAGS := -march=rv64imafdcv0p7xthead -g \nLDFLAGS := \n\n\nTARGET=sumdemo\n\n\nifeq (,$(TOOLCHAIN_PREFIX))\n\n$(error TOOLCHAIN_PREFIX ist nicht gesetzt)\n\nendif\n\n\nifeq (,$(CFLAGS))\n\n$(error CFLAGS ist nicht gesetzt)\n\nendif\n\n\nCC = $(TOOLCHAIN_PREFIX)gcc\n\n\nSOURCE = $(wildcard*.c)\n\nOBJS = $(patsubst%.c,%.o,$(SOURCE))\n\n\n# Standardziel\n\nall: $(TARGET)\n\n\n$(TARGET): $(OBJS)\n\n   $(CC)$(CFLAGS) -o $@$(OBJS)$(LDFLAGS)\n\n\n%.o: %.c\n\n   $(CC)$(CFLAGS) -o $@ -c $<\n\n\n# Upload-Ziel\n\nupload: $(TARGET)\n\n   scp $(TARGET) root@192.168.42.1:/root/target/$(TARGET)\n\n\n.PHONY: clean upload\n\nclean:\n\n   rm -f *.o $(TARGET)\n\n\n# Lassen Sie das 'all' Ziel von 'upload' abh\xe4ngen, um es nach dem Build automatisch hochzuladen\n\nall: upload\n\n"})}),"\n",(0,s.jsx)(n.h4,{id:"vorbereitung-des-gdbserver",children:"Vorbereitung des gdbserver"}),"\n",(0,s.jsx)(n.p,{children:"Das Original-Buildroot-Image enth\xe4lt keinen gdbserver. Sie k\xf6nnen die ausf\xfchrbare Datei des Original-gdbserver kopieren oder ein neu gebautes Image mit dem RuyiSDK hinzuf\xfcgen."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Laden Sie das Original-gdbserver-Executable herunter: ",(0,s.jsx)(n.a,{href:"https://github.com/milkv-duo/duo-buildroot-sdk/blob/develop/ramdisk/rootfs/public/gdbserver/riscv_musl/usr/bin/gdbserver",children:"https://github.com/milkv-duo/duo-buildroot-sdk/blob/develop/ramdisk/rootfs/public/gdbserver/riscv_musl/usr/bin/gdbserver"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Kopieren Sie das heruntergeladene gdbserver in den Pfad des milkv duo Ger\xe4ts:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'\nscp gdbserver root@192.168.42.1:/usr/bin/\n\nssh root@192.168.42.1 "chmod +x /usr/bin/gdbserver"\n\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"debugging-im-terminal",children:"Debugging im Terminal"}),"\n",(0,s.jsx)(n.p,{children:"Diese Vorgehensweise ist vergleichbar mit dem Debugging \xfcber das Terminal des Betriebssystems. Gewohnte Benutzer von Befehlen k\xf6nnen dies ausprobieren."}),"\n",(0,s.jsx)(n.p,{children:"Das Terminal unterst\xfctzt verschiedene Methoden wie Local Terminal und SSH Terminal. Sie k\xf6nnen gleichzeitig ein Local Terminal und ein SSH Terminal mit milkv duo \xf6ffnen, um Operationen durchzuf\xfchren."}),"\n",(0,s.jsx)(n.p,{children:"Die Schritte f\xfcr das Remote-Debugging mit GDBServer + GDB-Befehlen sind wie folgt:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Auf der milkvduo-Ger\xe4teseite (im Verzeichnis von helloworld ausf\xfchren):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"[root@milkv-duo]~/target# gdbserver :2345 ./sumdemo\nProzess ./sumdemo erstellt; pid = 1802\nLauschen auf Port 2345\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Auf der PC-Seite (im Verzeichnis von helloworld.c ausf\xfchren):"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cd ~/ews-milkvduo-t01/sumdemo\n\n# \xdcberpr\xfcfen Sie die gdb-Version und starten Sie das Debugging\n# Hier verwenden wir die ruyi virtuelle Umgebung f\xfcr das Debugging, aktivieren Sie die virtuelle Umgebung und kompilieren Sie in der virtuellen Umgebung\nsource ~/venv-milkvduo/bin/ruyi-activate \nriscv64-unknown-linux-musl-gdb --version\nriscv64-unknown-linux-musl-gdb ./sumdemo\n\ntarget remote 192.168.42.1:2345   # Die Portnummer muss mit der des gdbserver \xfcbereinstimmen\n\nbreak sumdemo.c:8                 # Setzen Sie einen Haltepunkt in Zeile 8\n\n# Die folgenden Befehle sind m\xf6glicherweise n\xfctzlich, verwenden Sie sie nach Bedarf\nc                                 # continue, setzen Sie die Programmausf\xfchrung fort, bis der n\xe4chste Haltepunkt erreicht wird\ndisp result                       # Verfolgen Sie eine Variable, um ihren Wert bei jedem Haltepunkt anzuzeigen\nprint result                      # Drucken Sie die interne Variable result\n\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736326691511",src:i(74).A+"",width:"2288",height:"1250"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(1316).A+"",children:"Local Terminal + SSH Terminal | GDBServer + GDB Debugging-Demonstration"})}),"\n",(0,s.jsx)(n.h4,{id:"cc-remote-anwendung-1",children:"C/C++ Remote-Anwendung"}),"\n",(0,s.jsx)(n.p,{children:"Vergleichen Sie die folgenden Bilder und passen Sie die relevanten Parameter an, wobei die folgenden Punkte wichtig sind:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Projekt: Standardm\xe4\xdfig der Name des Zielprogramms"}),"\n",(0,s.jsx)(n.li,{children:"C/C++ Anwendung: Auch standardm\xe4\xdfig der Name des Zielprogramms (Suchprojekt zur Abfrage)"}),"\n",(0,s.jsx)(n.li,{children:"Verbindung: Neu > SSH"}),"\n",(0,s.jsx)(n.li,{children:"Remote-Absolute-Dateipfad f\xfcr C/C++ Anwendung: Geben Sie die absolute Adresse des Zielprogramms auf dem RISC-V-Ger\xe4t ein (in diesem Beispiel muss dies mit dem Pfad im scp-Befehl im Makefile \xfcbereinstimmen)"}),"\n",(0,s.jsx)(n.li,{children:"Zielpfad-Download \xfcberspringen: In der aktuellen Version wird empfohlen, dies zu aktivieren und zusammen mit dem im Makefile definierten Upload-Ziel zu verwenden, um das Zielprogramm vom Host auf das Ziel-Entwicklungskit zu \xfcbertragen. Dies liegt daran, dass ohne Aktivierung das IDE das RSE (Remote System Explorer) Plugin installieren muss und das Zielger\xe4tesystem sftp-server unterst\xfctzen muss. Derzeit unterst\xfctzt milkvduo kein sftp-server, daher ist diese Funktion vor\xfcbergehend nicht verf\xfcgbar."}),"\n",(0,s.jsxs)(n.li,{children:["Debugger > Haupt > GDB-Debugger: Geben Sie den Pfad zu GDB an. In diesem Beispiel verwenden wir ",(0,s.jsx)(n.code,{children:"~/.local/share/ruyi/binaries/x86_64/gnu-milkv-milkv-duo-musl-bin-0.20240731.0+git.67688c7335e7/bin/riscv64-unknown-linux-musl-gdb"})]}),"\n",(0,s.jsx)(n.li,{children:"Debugger > GDB > GDBserver-Einstellungen: Geben Sie GDBServer und den Kommunikationsport an"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736320771077",src:i(6816).A+"",width:"1453",height:"877"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736320799175",src:i(8685).A+"",width:"643",height:"518"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736320837701",src:i(1185).A+"",width:"1455",height:"877"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736324370390",src:i(4561).A+"",width:"1746",height:"875"})}),"\n",(0,s.jsx)(n.p,{children:"Wie bei der Ausf\xfchrung ist die Funktion zur Fern\xfcbertragung des Zielprogramms derzeit aufgrund der fehlenden Unterst\xfctzung von sftp-server auf milkv duo nicht verf\xfcgbar, was zu folgendem Fehler f\xfchrt."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736320589408",src:i(3247).A+"",width:"571",height:"313"})}),"\n",(0,s.jsx)(n.p,{children:'Durch Aktivieren der Option "Zielpfad-Download \xfcberspringen" k\xf6nnen Sie dieses Problem umgehen. In Kombination mit der Upload-Definition im Makefile wird das Zielprogramm bereits w\xe4hrend der Build-Phase vom Host auf das Zielger\xe4t \xfcbertragen.'}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"1736321809187",src:i(8431).A+"",width:"1751",height:"877"})}),"\n",(0,s.jsx)(n.p,{children:"Ausf\xfchrungsbeispiel:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(3566).A+"",children:'Fehler bei der Ausf\xfchrung ohne Aktivierung der Option "Zielpfad-Download \xfcberspringen"'})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:i(5418).A+"",children:'Erfolgreiche Ausf\xfchrung mit aktivierter Option "Zielpfad-Download \xfcberspringen"'})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"zus\xe4tzliche-hinweise",children:"Zus\xe4tzliche Hinweise"}),"\n",(0,s.jsx)(n.h3,{id:"ssh-schl\xfcsselkonfiguration",children:"SSH-Schl\xfcsselkonfiguration"}),"\n",(0,s.jsx)(n.p,{children:"Hier wird die SSH-Schl\xfcsselkonfiguration im Detail erl\xe4utert:"}),"\n",(0,s.jsx)(n.p,{children:"Durch die Konfiguration von ssh-key f\xfcr den Host und milkv duo zur passwortlosen Anmeldung wird erreicht, dass die Bin\xe4rdateien nach dem Build automatisch an den angegebenen Pfad auf milkv duo \xfcbertragen werden."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"F\xfchren Sie auf dem Host ssh-keygen aus"}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"F\xfcgen Sie den \xf6ffentlichen Schl\xfcssel zu milkv duo hinzu:"}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\n#cat ~/.ssh/id_rsa.pub | ssh username@milkv_duo_ip_address 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'\n\ncat ~/.ssh/milkvduo.pub | ssh root@192.168.42.1 'mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys'\n\n"})}),"\n",(0,s.jsxs)(n.ol,{start:"3",children:["\n",(0,s.jsx)(n.li,{children:"\xdcberpr\xfcfen: ssh root@192.168.42.1"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Im Erfolgsfall ist es nicht mehr erforderlich, ein Passwort einzugeben."})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(o,{...e})}):o(e)}},1316:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/files/gdb-terminal-1-16261d0bad6c2994f0614e94a40bc46c.gif"},3566:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/files/gdb-withdownload-42ab9ed9dc98bbdfb17db1d37056954b.gif"},5418:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/files/gdb-withoutdownload-cc4c7c349461da64f9bc5d27eb0ff876.gif"},8292:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/files/run1-20b03660694655ff32bc183948eaac7d.gif"},2348:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735623999135-b9ee8d8e5a8e5dd8d65e1dd126d70cbf.png"},7582:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735624096763-6dc6a1c9dba44c24a9a4068646cc8379.png"},1643:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735624436834-91ecc5d885fd62e0d5f54521925da5d9.png"},34:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735624925007-4702f45bb5a5e63309a5e4fe97979de7.png"},1498:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735625245878-4ed00ff12a8f9173d4cea6a5935a239a.png"},8786:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735626678903-c96fe363723450c4a8e1e1e7d6fe4fbf.png"},2886:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735626740680-12ce3f29f2603c912607801a9e7128ce.png"},408:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735626766840-d38056ea55735d53071b5eb8293ffe43.png"},2780:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1735626979037-2eeda4af40ff487e912a1b66b14fb2be.png"},3247:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736320589408-f58e692d1667d546d2ec1d2a0ecd31a8.png"},6816:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736320771077-b2eba9e5920439bb66683be650cc92b7.png"},8685:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736320799175-287e0e03b0b9c5922b92b9b2961c1c67.png"},1185:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736320837701-601118532bad335c4446308336a7a312.png"},8431:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736321809187-6bc23f44ec61d6c10f9972d1db79214b.png"},4561:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736324370390-53dce551f739f76108dee5230fec28f0.png"},74:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736326691511-602fefed9971143b123fa9bc87fcc1d6.png"},5946:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736776549440-6a9a87ae4ad22e22b9f5f5071768290f.png"},1464:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736776684233-b536fb0e06d0fd5a19b72d63e3307547.png"},4228:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736776707622-698cad9f139e63a66a3392f5193286d7.png"},2720:(e,n,i)=>{i.d(n,{A:()=>s});const s=i.p+"assets/images/1736777304796-9de9b5cab0b9f6442ac969a29af8bd3f.png"},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>t});var s=i(6540);const r={},d=s.createContext(r);function l(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);