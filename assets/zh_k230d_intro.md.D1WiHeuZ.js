import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.oYgP5hCw.js";const o=JSON.parse('{"title":"Canaan K230D 使用说明","description":"","frontmatter":{},"headers":[],"relativePath":"zh/k230d/intro.md","filePath":"zh/k230d/intro.md","lastUpdated":1736837027000}'),e={name:"zh/k230d/intro.md"};function h(l,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="canaan-k230d-使用说明" tabindex="-1">Canaan K230D 使用说明 <a class="header-anchor" href="#canaan-k230d-使用说明" aria-label="Permalink to &quot;Canaan K230D 使用说明&quot;">​</a></h1><h2 id="安装系统镜像" tabindex="-1">安装系统镜像 <a class="header-anchor" href="#安装系统镜像" aria-label="Permalink to &quot;安装系统镜像&quot;">​</a></h2><h3 id="直接下载安装" tabindex="-1">直接下载安装 <a class="header-anchor" href="#直接下载安装" aria-label="Permalink to &quot;直接下载安装&quot;">​</a></h3><p>RuyiSDK 目前提供了 LP64 和 ILP32 两种镜像文件，可以通过 RuyiSDK 下载安装，具体步骤如下：</p><ol><li><p>请确保您已经下载并安装了 <code>ruyi</code> ，请参考 <a href="https://ruyisdk.org/docs/Package-Manager/installation" target="_blank" rel="noreferrer">RuyiSDK 包管理器安装说明</a>安装（建议您下载最新版本），安装完成后可以执行 <code>ruyi --version</code> 查看版本信息；</p></li><li><p>执行 <code>ruyi update</code> 更新 RuyiSDK 软件源；该操作将会把软件源的最新软件包等资源索引更新到本地，方便后续查询、安装能够得到最新的信息。</p></li><li><p>执行 <code>ruyi device provision</code> 进入系统镜像安装引导程序，按照提示信息，选择 <code>Canaan Kendryte K230D</code> 开发板、开发板规格、镜像文件类型等信息，引导程序将会引导您完成镜像的烧录。</p><p>当前，RuyiSDK 为 K230D 提供了 RV64ILP32（玄铁新32位内核+32位rootfs） 和 RV64LP64（常规64位系统），推荐您安装 RV64ILP32 系统体验新32位在动态内存空间消耗上的优势。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> following</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> system</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> configurations</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> are</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> supported</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> variant</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chosen.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Please</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pick</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> one</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> want</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> put</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  1.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Canaan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Kendryte</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> K230D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CanMV</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SDK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RV64ILP32</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ABI</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  2.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Canaan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Kendryte</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> K230D</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CanMV</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Linux</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> SDK</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> demo,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> RV64LP64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ABI</span></span></code></pre></div></li></ol><h3 id="源码构建" tabindex="-1">源码构建 <a class="header-anchor" href="#源码构建" aria-label="Permalink to &quot;源码构建&quot;">​</a></h3><blockquote><p>注意：k230d_canmv_ilp32_defconfig 需要 ubuntu 22.04 或 24.04 并安装 rv64ilp32 工具链，因此源码构建请在ubuntu 22.04 或 ubuntu 24.04 环境下操作。</p></blockquote><p>K230D RuyiSDK 地址为：<a href="https://github.com/ruyisdk/k230_linux_sdk" target="_blank" rel="noreferrer">https://github.com/ruyisdk/k230_linux_sdk</a></p><p>K230D SDK 提供了镜像的<a href="https://github.com/ruyisdk/k230_linux_sdk/blob/dev/README_zh.md" target="_blank" rel="noreferrer">构建说明</a>，构建完成后，镜像文件存放在 <code>output</code> 目录下。根据执行的 defconfig 分别存放，64ILP32 和 64LP64 的镜像文件路径分别为：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 64ILP32</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output/k230d_canmv_ilp32_defconfig/images/sysimage-sdcard.img</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 64LP64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">output/k230d_canmv_lp64_defconfig/images/sysimage-sdcard.img</span></span></code></pre></div><p>构建完成后，请解压文件，刻录到 tf 卡，将 tf 插入设备，设备上电即可开始使用。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 假设/dev/sdb就是TF卡设备节点，执行如下命令烧录TF卡：</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> dd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> if=sysimage-sdcard.img</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> of=/dev/sdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> bs=1M</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> oflag=sync</span></span></code></pre></div><h2 id="启动" tabindex="-1">启动 <a class="header-anchor" href="#启动" aria-label="Permalink to &quot;启动&quot;">​</a></h2><p>设备上电系统自动启动，开发板上红灯亮则说明开发板正常上电。root 账户默认没有密码，此时可以查看串口信息。</p><p>如果开发板连接屏幕，稍候会自动运行 LVGL DEMO 展示资源占用，并且 DEMO 含触控交互。</p>`,15)]))}const g=i(e,[["render",h]]);export{o as __pageData,g as default};
