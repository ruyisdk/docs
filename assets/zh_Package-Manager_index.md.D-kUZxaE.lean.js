import{_ as d,c as e,a2 as r,o}from"./chunks/framework.oYgP5hCw.js";const h=JSON.parse('{"title":"功能概览","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Package-Manager/index.md","filePath":"zh/Package-Manager/index.md","lastUpdated":1736837027000}'),a={name:"zh/Package-Manager/index.md"};function i(c,t,u,l,n,s){return o(),e("div",null,t[0]||(t[0]=[r('<h1 id="功能概览" tabindex="-1">功能概览 <a class="header-anchor" href="#功能概览" aria-label="Permalink to &quot;功能概览&quot;">​</a></h1><p>ruyi 包管理器主要提供以下功能。</p><h2 id="命令查询" tabindex="-1">命令查询 <a class="header-anchor" href="#命令查询" aria-label="Permalink to &quot;命令查询&quot;">​</a></h2><table tabindex="0"><thead><tr><th>命令</th><th>含义</th><th>注意事项</th></tr></thead><tbody><tr><td><code>ruyi update</code></td><td>更新软件包缓存，使用默认镜像。</td><td>软件包缓存将存放在用户目录中，通常为 <code>~/.cache/ruyi</code>。</td></tr><tr><td><code>ruyi news list -h</code></td><td>查看新闻命令的帮助信息。</td><td></td></tr><tr><td><code>ruyi news list</code></td><td>列出所有新闻。</td><td></td></tr><tr><td><code>ruyi news list --new</code></td><td>仅列出未读新闻。</td><td></td></tr><tr><td><code>ruyi news read -h</code></td><td>查看新闻阅读命令的帮助信息。</td><td></td></tr><tr><td><code>ruyi news read 1</code></td><td>读取特定序号的新闻。</td><td>1 为要读取的新闻条目的序号或 ID。</td></tr><tr><td><code>ruyi news read</code></td><td>读取下一条新闻。</td><td></td></tr><tr><td><code>ruyi news read --quiet</code></td><td>标记新闻为已读，不输出任何信息。</td><td>不输出任何东西，只标记为已读。</td></tr><tr><td><code>ruyi list</code></td><td>列出所有可用软件包。</td><td></td></tr><tr><td><code>ruyi list -v</code></td><td>列出所有软件包的详细信息。</td><td></td></tr><tr><td><code>ruyi list profiles</code></td><td>查看预置的虚拟环境配置。</td><td></td></tr><tr><td><code>ruyi install gnu-upstream</code></td><td>安装最新的 GNU 上游工具链。</td><td>默认安装最新版本的 gnu-upstream。</td></tr><tr><td><code>ruyi install &#39;gnu-upstream(0.20231118.0)&#39;</code></td><td>安装指定版本的 GNU 上游工具链。</td><td>通过指定版本号安装历史版本。</td></tr><tr><td><code>ruyi install &#39;gnu-upstream(==0.20231118.0)&#39;</code></td><td>安装特定版本的 GNU 上游工具链。</td><td>版本匹配格式应为 <code>&lt;op&gt;&lt;ver&gt;</code>。</td></tr><tr><td><code>ruyi install --reinstall gnu-upstream</code></td><td>重新安装 GNU 上游工具链。</td><td></td></tr><tr><td><code>ruyi extract ruyisdk-demo</code></td><td>下载并解包ruyisdk-demo 源码包。</td><td>解包到当前目录。</td></tr><tr><td><code>ruyi venv --toolchain gnu-upstream --emulator qemu-user-riscv-upstream generic ./ruyi_venv</code></td><td>在指定目录建立包含工具链和模拟器的虚拟环境。</td><td>使用预置的 generic 配置。</td></tr><tr><td><code>ruyi version</code></td><td>查看 ruyi 包管理器的版本。</td><td></td></tr><tr><td><code>ruyi self uninstall</code></td><td>卸载 ruyi 包管理器。</td><td>命令会询问确认操作。</td></tr><tr><td><code>ruyi self uninstall -y</code></td><td>无需确认直接卸载 ruyi 包管理器。</td><td>无需确认直接执行。</td></tr><tr><td><code>ruyi self uninstall --purge</code></td><td>彻底卸载 ruyi 包管理器，包括缓存和安装的软件包。</td><td>包括缓存和已安装的软件包。</td></tr><tr><td><code>ruyi self uninstall --purge -y</code></td><td>无需确认彻底卸载 ruyi 包管理器。</td><td>无需确认直接执行。</td></tr><tr><td><code>ruyi self clean</code></td><td>清除数据目录。</td><td>可以通过参数指定清除哪些目录</td></tr><tr><td><code>ruyi device provision</code></td><td>下载所需系统镜像，并为设备安装系统。</td><td>按照引导进行系统安装。</td></tr></tbody></table><h2 id="数据目录" tabindex="-1">数据目录 <a class="header-anchor" href="#数据目录" aria-label="Permalink to &quot;数据目录&quot;">​</a></h2><ul><li>ruyi 本体 <code>/usr/local/bin/ruyi</code> 或其他 <code>PATH</code> 包含的目录下</li><li>用户配置文件 <code>~/.config/ruyi/config.toml</code></li><li>用户缓存 <code>~/.cache/ruyi</code></li><li>用户基本数据，包括下载和解包的 ruyi 软件包 <code>~/.local/share/ruyi</code></li><li>用户状态数据 <code>~/.local/state/ruyi</code></li></ul><p>Ruyi 支持使用 XDG 环境变量配置这些目录。</p><h2 id="更多" tabindex="-1">更多 <a class="header-anchor" href="#更多" aria-label="Permalink to &quot;更多&quot;">​</a></h2><p>可以查阅 ruyi 包管理器<a href="https://github.com/ruyisdk/ruyi" target="_blank" rel="noreferrer">仓库文档</a>（目前仅支持英文）。</p>',9)]))}const p=d(a,[["render",i]]);export{h as __pageData,p as default};
