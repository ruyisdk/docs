import{_ as i,c as a,a2 as n,o as t}from"./chunks/framework.oYgP5hCw.js";const g=JSON.parse('{"title":"使用集成功能","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Package-Manager/intergration.md","filePath":"zh/Package-Manager/intergration.md","lastUpdated":1736837027000}'),l={name:"zh/Package-Manager/intergration.md"};function h(e,s,k,p,F,r){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="使用集成功能" tabindex="-1">使用集成功能 <a class="header-anchor" href="#使用集成功能" aria-label="Permalink to &quot;使用集成功能&quot;">​</a></h1><p>Ruyi 包管理器除了作为一个包管理器具有基本的软件包管理功能以外，还为工具链、模拟器、镜像等软件包提供了集成。</p><p>您可以：</p><ul><li>获取 RuyiSDK 提供的常用源码包</li><li>在不需要了解过多细节的情况下方便地将工具链和模拟器组合，以某一 RISC-V CPU 平台为目标建立 Ruyi 虚拟环境</li><li>在系统中创建独立的环境，以确保对于不同版本编译工具链以及库文件进行环境隔离，保证开发过程的高效性</li><li>为某一具体型号和配置的 RISC-V SOC 开发板刷写您想要使用的系统镜像</li><li>为某一 RISC-V 单片机找到经过验证支持良好的实时操作系统</li></ul><h2 id="ruyi-虚拟环境" tabindex="-1">Ruyi 虚拟环境 <a class="header-anchor" href="#ruyi-虚拟环境" aria-label="Permalink to &quot;Ruyi 虚拟环境&quot;">​</a></h2><p>Ruyi 包管理器工具的 <code>venv</code> 命令用于组合工具链、模拟器来建立虚拟环境。编译环境提供了不同开发板所需的配置，自动传入编译所需的参数。</p><h3 id="虚拟环境配置" tabindex="-1">虚拟环境配置 <a class="header-anchor" href="#虚拟环境配置" aria-label="Permalink to &quot;虚拟环境配置&quot;">​</a></h3><p>Ruyi 软件源中已经提供了一些预置的配置且无需安装，这些配置可以使用 <code>ruyi list profiles</code> 命令列出：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> list</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> profiles</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">generic</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">baremetal-rv64ilp32</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (needs </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">flavor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {&#39;rv64ilp32&#39;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">xiangshan-nanhu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sipeed-lpi4a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (needs </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">flavor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">s</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {&#39;xthead&#39;}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">milkv-duo</span></span></code></pre></div><p>一些配置需要支持特定 flavor(s) 的 Ruyi 工具链包才能使用，您可以在 <code>ruyi list --verbose</code> 中查看某个工具链包是否支持这种特性。或者，直接参考“工具链与预制配置组合“中的表格。</p><h3 id="工具链与预置配置组合" tabindex="-1">工具链与预置配置组合 <a class="header-anchor" href="#工具链与预置配置组合" aria-label="Permalink to &quot;工具链与预置配置组合&quot;">​</a></h3><p>Ruyi 包管理在建立虚拟环境之前会检查该环境是否存在冲突，但是并不保证建立成功的环境一定可用。灵活使用该功能需要您对这些工具链有一定的了解，一般情况下则可以直接参考下面的表格。</p><p>这里列出了经过测试确认可用的配置组合：</p><table tabindex="0"><thead><tr><th style="text-align:center;">工具链(toolchain)</th><th style="text-align:center;">sysroot</th><th style="text-align:center;">预置配置(profile)</th><th style="text-align:center;">构建目标</th></tr></thead><tbody><tr><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">自带</td><td style="text-align:center;">generic</td><td style="text-align:center;">riscv64 架构的 Linux 操作系统</td></tr><tr><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">自带</td><td style="text-align:center;">milkv-duo</td><td style="text-align:center;">使用 glibc 的 MilkV Duo 系列开发板镜像</td></tr><tr><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">自带</td><td style="text-align:center;">xiangshan-nanhu</td><td style="text-align:center;">香山南湖</td></tr><tr><td style="text-align:center;">gnu-upstream</td><td style="text-align:center;">自带</td><td style="text-align:center;">generic</td><td style="text-align:center;">riscv64 架构的 Linux 操作系统</td></tr><tr><td style="text-align:center;">gnu-plct-xthead</td><td style="text-align:center;">自带</td><td style="text-align:center;">sipeed-lpi4a</td><td style="text-align:center;">Thead C910</td></tr><tr><td style="text-align:center;">gnu-plct-rv64ilp32-elf</td><td style="text-align:center;">无</td><td style="text-align:center;">baremetal-rv64ilp32</td><td style="text-align:center;">rv64ilp32 裸机</td></tr><tr><td style="text-align:center;">llvm-plct</td><td style="text-align:center;">gnu-plct</td><td style="text-align:center;">generic</td><td style="text-align:center;">riscv64 架构的 Linux 操作系统</td></tr><tr><td style="text-align:center;">llvm-upstream</td><td style="text-align:center;">gnu-upstream</td><td style="text-align:center;">generic</td><td style="text-align:center;">riscv64 架构的 Linux 操作系统</td></tr></tbody></table><table tabindex="0"><thead><tr><th style="text-align:center;">厂商发布的二进制工具链(toolchain)</th><th style="text-align:center;">sysroot</th><th style="text-align:center;">预置配置(profile)</th><th style="text-align:center;">构建目标</th></tr></thead><tbody><tr><td style="text-align:center;">gnu-milkv-milkv-duo-elf-bin</td><td style="text-align:center;">无</td><td style="text-align:center;">generic</td><td style="text-align:center;">Milkv Duo 系列开发板裸机（需要额外传参）</td></tr><tr><td style="text-align:center;">gnu-milkv-milkv-duo-bin</td><td style="text-align:center;">自带</td><td style="text-align:center;">generic</td><td style="text-align:center;">使用 glibc 的 Milkv Duo 系列开发板镜像（需要额外传参）</td></tr><tr><td style="text-align:center;">gnu-milkv-milkv-duo-musl-bin</td><td style="text-align:center;">自带</td><td style="text-align:center;">generic</td><td style="text-align:center;">使用 musl 的 Milkv Duo 系列开发板镜像（需要额外传参）</td></tr></tbody></table><p>编译工具链的更多相关信息请参考<a href="./../Other/GNU-type.html">RuyiSDK 编译工具</a>。</p><h3 id="创建虚拟环境" tabindex="-1">创建虚拟环境 <a class="header-anchor" href="#创建虚拟环境" aria-label="Permalink to &quot;创建虚拟环境&quot;">​</a></h3><p>使用 <code>venv</code> 命令的具体方法可通过 <code>-h</code> 参数获得：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -h</span></span></code></pre></div><p>这里给出一些实例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 GNU 上游工具链配置 RISC-V 虚拟环境：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./generic-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 PLCT 工具链配置 Milkv-Duo 虚拟环境：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-plct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> milkv-duo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./milkv-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用 PLCT 工具链配置香山南湖虚拟环境：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-plct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> xiangshan-nanhu</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./nanhu-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># llvm 通常需要使用 gcc 的 sysroot：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> llvm-upstream</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --sysroot-from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-plct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./llvm-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用指定版本的平头哥工具链配置荔枝派 4A 虚拟环境：</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;gnu-plct-xthead(==0.20231212.0)&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sipeed-lpi4a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./sipeed-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用上游 QEMU 模拟器运行交叉编译的 RISC-V 二进制</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-plct</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qemu-user-riscv-upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./qemu-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 使用平头哥 QEMU 模拟器运行交叉编译的 RISC-V 二进制</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-plct-xthead</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sipeed-lpi4a</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qemu-user-riscv-xthead</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./xthead-qemu-venv</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 多工具链示例，其中 gnu-upstream 提供了 sysroot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> llvm-upstream</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./upstream-venv</span></span></code></pre></div><p>虚拟环境是用于集成工具链、模拟器等工具的，创建编译环境之前请确保对应的 Ruyi 软件包已经安装。</p><h3 id="虚拟环境集成" tabindex="-1">虚拟环境集成 <a class="header-anchor" href="#虚拟环境集成" aria-label="Permalink to &quot;虚拟环境集成&quot;">​</a></h3><p>下面以 gnu-upstream 为例详细描述虚拟环境集成，路径、 <code>PS1</code> 等环境相关的信息请根据实际理解和修改。</p><p>首先安装本示例所需的软件包：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qemu-user-riscv-upstream</span></span></code></pre></div><p>建立一个干净的目录用于运行用例：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-ruyi</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hello-ruyi</span></span></code></pre></div><p>获取 ruyisdk-demo 源码：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> extract</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyisdk-demo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">README.md</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  rvv-autovec</span></span></code></pre></div><p>建立虚拟环境：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> venv</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> gnu-upstream</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> qemu-user-riscv-upstream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> generic</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./myhone-venv</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Creating</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> a</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhone-venv...</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> now</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> created.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">You</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> may</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sourcing</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> appropriate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activation</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> script</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> deactivate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> by</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> invoking</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruyi-deactivate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\`</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> fresh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sysroot/prefix</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> also</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provisioned</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">It</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> available</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> following</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> path:</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    /home/myhone/hello-ruyi/myhone-venv/sysroot</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">The</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> also</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> comes</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> with</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ready-made</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CMake</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> toolchain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">and</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Meson</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cross</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Check</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> virtual</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> environment</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> those</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">comments</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> files</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> contain</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> usage</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> instructions.</span></span></code></pre></div><p>该虚拟环境集成了 gnu-upstream 工具链和 qemu-user-riscv-upstream 模拟器，使用目标 riscv64 Linux 操作系统的 generic 配置，将编译环境建立在 <code>./myhome-venv</code> 目录下（亦可用绝对路径）。命令的输出给出了激活编译环境的方法，退出编译环境的命令， sysroot 目录的绝对路径以及一些其他信息。</p><p>在虚拟环境目录可以看到编译环境相关的文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./myhone-venv/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">bin</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                        ruyi-venv.toml</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">binfmt.conf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                sysroot</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">meson-cross.ini</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            sysroot.riscv64-unknown-linux-gnu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">meson-cross.riscv64-unknown-linux-gnu.ini</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  toolchain.cmake</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ruyi-cache.v1.toml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         toolchain.riscv64-unknown-linux-gnu.cmake</span></span></code></pre></div><p>其中 <code>binfmt.conf</code> 是可用于 systemd-binfmt 的示例配置， <code>toolchain.cmake</code> 和 <code>meson-cross.ini</code> 可用于项目的交叉编译， <code>sysroot</code> 为该虚拟环境使用的 sysroot， <code>bin</code> 目录包含了该编译环境可用的命令和脚本。</p><p>在 <code>bin</code> 目录下可以查看到可用的工具链二进制：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ls</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./myhone-venv/bin/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-addr2line</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  riscv64-unknown-linux-gnu-gcc-ranlib</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     riscv64-unknown-linux-gnu-nm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-ar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         riscv64-unknown-linux-gnu-gcov</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           riscv64-unknown-linux-gnu-objcopy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-as</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         riscv64-unknown-linux-gnu-gcov-dump</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      riscv64-unknown-linux-gnu-objdump</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        riscv64-unknown-linux-gnu-gcov-tool</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      riscv64-unknown-linux-gnu-ranlib</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-cc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         riscv64-unknown-linux-gnu-gdb</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">            riscv64-unknown-linux-gnu-readelf</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-c++filt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    riscv64-unknown-linux-gnu-gdb-add-index</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  riscv64-unknown-linux-gnu-size</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-cpp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        riscv64-unknown-linux-gnu-gfortran</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       riscv64-unknown-linux-gnu-strings</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-elfedit</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    riscv64-unknown-linux-gnu-gprof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          riscv64-unknown-linux-gnu-strip</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-g++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        riscv64-unknown-linux-gnu-ld</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             ruyi-activate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        riscv64-unknown-linux-gnu-ld.bfd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         ruyi-qemu</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-gcc-ar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     riscv64-unknown-linux-gnu-ldd</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-gcc-nm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     riscv64-unknown-linux-gnu-lto-dump</span></span></code></pre></div><p>其中包含了全部的工具链命令，被重命名为 <code>ruyi-qemu</code> 的 QEMU 用户态模拟器，以及用于进入虚拟环境的 <code>ruyi-activate</code> 脚本。其中工具链命令实际上是指向 ruyi 的软链接。</p><p><code>source</code> ruyi-activate 脚本即可激活构建环境， <code>PS1</code> 将被修改：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./myhone-venv/bin/ruyi-activate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">«Ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhone-venv»</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $</span></span></code></pre></div><p>同时 <code>PATH</code> 也被修改，现在可以直接调用工具链了：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">«Ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhone-venv»</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">whereis</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> riscv64-unknown-linux-gnu-gcc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-gcc:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /home/myhone/hello-ruyi/myhone-venv/bin/riscv64-unknown-linux-gnu-gcc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">«Ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhone-venv»</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">riscv64-unknown-linux-gnu-gcc</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">riscv64-unknown-linux-gnu-gcc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (RuyiSDK </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20231212</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Upstream-Sources</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) 13.2.0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Copyright</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (C) 2023 Free Software Foundation, Inc.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">This</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> free</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> software</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">see</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> the</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> copying</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> conditions.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  There</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> is</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">warranty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> even</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> MERCHANTABILITY</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FITNESS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> FOR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> A</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PARTICULAR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PURPOSE.</span></span></code></pre></div><p>在 Ruyi 虚拟环境下，除了会自动向工具链传入配置的架构选项外，工具链和模拟器的使用并没有太大的区别。更多内容还可以参考“使用案例”章节。</p><p>构建 ruyisdk-demo：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> rvv-autovec</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> make</span></span></code></pre></div><p>在完成虚拟环境的使用后，退出编译环境，一切都将被还原到进入以前的状态：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">«Ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> myhone-venv»</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $ </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ruyi-deactivate</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span></span></code></pre></div><h2 id="ruyi-镜像集成" tabindex="-1">Ruyi 镜像集成 <a class="header-anchor" href="#ruyi-镜像集成" aria-label="Permalink to &quot;Ruyi 镜像集成&quot;">​</a></h2><p>Ruyi 的镜像集成提供了开发板镜像刷写和单片机设备文档。该功能与 RuyiSDK <a href="https://github.com/ruyisdk/support-matrix/" target="_blank" rel="noreferrer">RISC-V 开发板与操作系统支持矩阵</a>项目是联动的。</p><p>该功能提供了一个向导，支持使用 <code>dd</code> 和 <code>fastboot</code> 对 RISC-V 设备进行系统镜像刷写，同时也为 RISC-V 单片机这类不能常规刷写的设备提供了指导文档。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provision</span></span></code></pre></div><p>更详细的示例还可以参考“使用案例”章节。</p>`,53)]))}const y=i(l,[["render",h]]);export{g as __pageData,y as default};
