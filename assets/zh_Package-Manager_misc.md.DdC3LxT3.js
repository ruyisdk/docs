import{_ as s,c as a,a2 as e,o as l}from"./chunks/framework.oYgP5hCw.js";const k=JSON.parse('{"title":"更多信息","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Package-Manager/misc.md","filePath":"zh/Package-Manager/misc.md","lastUpdated":1736837027000}'),t={name:"zh/Package-Manager/misc.md"};function h(p,i,n,d,o,r){return l(),a("div",null,i[0]||(i[0]=[e('<h1 id="更多信息" tabindex="-1">更多信息 <a class="header-anchor" href="#更多信息" aria-label="Permalink to &quot;更多信息&quot;">​</a></h1><h2 id="更新-ruyi-包管理器" tabindex="-1">更新 Ruyi 包管理器 <a class="header-anchor" href="#更新-ruyi-包管理器" aria-label="Permalink to &quot;更新 Ruyi 包管理器&quot;">​</a></h2><p>如果您使用预编译的单二进制安装 Ruyi 包管理器，直接下载新版本二进制并重新执行安装流程，覆盖旧版本的 Ruyi 包管理器二进制即可。</p><p>如果您使用系统包管理器安装 Ruyi 包管理器，则可以直接使用系统包管理器升级：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Syuu</span></span></code></pre></div><p>这个命令将在 Arch Linux 执行全面的升级，注意 Arch Linux 并不支持部分升级。</p><h2 id="卸载-ruyi-包管理器" tabindex="-1">卸载 Ruyi 包管理器 <a class="header-anchor" href="#卸载-ruyi-包管理器" aria-label="Permalink to &quot;卸载 Ruyi 包管理器&quot;">​</a></h2><p>如果您使用系统包管理器安装 Ruyi 包管理器，请使用系统包管理器卸载。</p><p>如果您使用预编译的单二进制安装 Ruyi 包管理器，可以使用下面的命令卸载 ruyi 包管理器：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span></span></code></pre></div><p>这个命令将会询问以二次确认该操作，如果希望 Ruyi 包管理不询问而直接执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>上面的命令只是删除 Ruyi 包管理器本身，如果希望删除所有缓存和安装了的软件包以实现干净的卸载：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --purge</span></span></code></pre></div><p>同样的，这个命令将会询问以二次确认该操作，如果希望 Ruyi 包管理不询问而直接执行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> uninstall</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --purge</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span></span></code></pre></div><p>Ruyi 包管理被设计为避免进行需要超级用户权限的操作，如果 Ruyi 包管理器被安装在 <code>/usr/local/bin/</code> 等需要超级用户权限才能更改的目录下， <code>ruyi self uninstall</code> 命令将会失败。</p><p>此时您可以手动删除所有缓存和安装了的软件包（它们被安装在家目录故不需要超级用户权限来删除）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> self</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clean</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --all</span></span></code></pre></div><p>然后手动删除 Ruyi 包管理器本体。</p><h2 id="报告错误" tabindex="-1">报告错误 <a class="header-anchor" href="#报告错误" aria-label="Permalink to &quot;报告错误&quot;">​</a></h2><p>在 Ruyi 包管理器仓库<a href="https://github.com/ruyisdk/ruyi/issues/new" target="_blank" rel="noreferrer">提出 issue</a>。</p><h2 id="遥测数据收集" tabindex="-1">遥测数据收集 <a class="header-anchor" href="#遥测数据收集" aria-label="Permalink to &quot;遥测数据收集&quot;">​</a></h2><p>ruyi 包管理器通过遥测数据收集功能，收集用户在使用 ruyi 包管理器时的一些操作数据，以便于我们更好地了解用户的使用情况，从而更好地改进 ruyi 包管理器。 你可以通过设置 <code>RUYI_TELEMETRY_OPTOUT</code> 环境变量来选择是否启用遥测数据收集功能。<code>1</code>，<code>true</code> 或 <code>yes</code> 表示代表关闭遥测，这与下文说的<code>off</code>是相同的；默认情况下，遥测数据收集功能是启用的。</p><p>有三种遥测数据收集级别：</p><ul><li><code>local</code>: 仅在本地保存遥测数据，不会在没有用户明确同意的情况下发送到远程服务器。</li><li><code>on</code>: 会将遥测数据发送到远程服务器。</li><li><code>off</code>: 关闭遥测数据收集功能。</li></ul><p>默认情况下，遥测数据收集级别是 <code>on</code>，意味着每一次 <code>ruyi</code> 调用都会记录一些非敏感的操作数据和 <code>ruyi</code> 的一些状态信息，并每周发送至由<code>RuyiSDK</code>管理的在中国大陆的远程服务器。上传会发生在随机的一天，由匿名安装 ID 决定。</p><p>你可以编辑 <code>ruyi</code> 的配置文件，或者通过简单的通过环境变量来设置遥测数据收集级别。</p><p>我们会收集这些数据：</p><ul><li>所运行的机器的基本信息: <ul><li>架构和 OS</li><li>如果架构为 RISC-V: <ul><li>ISA 能力</li><li>开发板的型号</li><li>逻辑 CPU 数量</li></ul></li><li>OS release ID (大约相当与发行版类型)</li><li>libc 的类型和版本</li><li>shell 的类型 (bash, fish, zsh, etc.)</li></ul></li><li>在上传数据时 <code>ruyi</code> 的版本</li><li><code>ruyi</code> 子命令的不同调用模式: <ul><li>不会暴露任何参数</li><li>调用时间的粒度为 1 分钟</li></ul></li></ul><p>你可以在 RuyiSDK 官网查看我们的隐私政策。</p>',31)]))}const u=s(t,[["render",h]]);export{k as __pageData,u as default};
