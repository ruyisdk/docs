import{_ as a,c as i,a2 as e,o as t}from"./chunks/framework.oYgP5hCw.js";const k=JSON.parse('{"title":"安装","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Package-Manager/installation.md","filePath":"zh/Package-Manager/installation.md","lastUpdated":1736837027000}'),h={name:"zh/Package-Manager/installation.md"};function n(p,s,l,d,r,c){return t(),i("div",null,s[0]||(s[0]=[e(`<h1 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h1><p>让我们从 RuyiSDK 包管理器的安装开始。</p><p>本文档使用 <code>~</code> 表示当前普通用户的家目录，必要时使用 <code>/home/myhone</code> 作为家目录绝对路径示例。</p><h2 id="使用预编译的二进制安装" tabindex="-1">使用预编译的二进制安装 <a class="header-anchor" href="#使用预编译的二进制安装" aria-label="Permalink to &quot;使用预编译的二进制安装&quot;">​</a></h2><p>目前 RuyiSDK 包管理器工具为 <strong>Linux</strong> 系统预编译了 <strong>amd64</strong>、<strong>arm64</strong>、<strong>riscv64</strong> 三种架构的二进制，它不依赖系统 Python，适用范围较为广泛。</p><p>它们同时发布在 GitHub Release 和 ISCAS 镜像站上：</p><ul><li><a href="https://github.com/RuyiSDK/ruyi/releases/" target="_blank" rel="noreferrer">ruyi GitHub Releases</a></li><li><a href="https://mirror.iscas.ac.cn/ruyisdk/ruyi/releases/" target="_blank" rel="noreferrer">ISCAS 镜像源</a></li></ul><p>以 ISCAS 镜像源为例描述安装流程，首先运行 <code>uname -m</code> 检查系统架构并下载对应的二进制。</p><p>如果输出为 <code>x86_64</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirror.iscas.ac.cn/ruyisdk/ruyi/releases/0.25.0/ruyi.amd64</span></span></code></pre></div><p>如果输出为 <code>aarch64</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirror.iscas.ac.cn/ruyisdk/ruyi/releases/0.25.0/ruyi.arm64</span></span></code></pre></div><p>如果输出为 <code>riscv64</code>：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirror.iscas.ac.cn/ruyisdk/ruyi/releases/0.25.0/ruyi.riscv64</span></span></code></pre></div><p>下面以 <code>x86_64</code> 架构为例，给下载的二进制添加执行权限：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./ruyi.amd64</span></span></code></pre></div><p>安装二进制到 <code>PATH</code> 包含的目录中：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi.amd64</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/ruyi</span></span></code></pre></div><p>如果您的 <code>PATH</code> 中包含 <code>~/.local/bin/</code> 目录，将 <code>ruyi</code> 安装到 <code>~/.local/bin/ruyi</code> 可能会是一个更推荐的选择。这个目录下的安装和删除并不需要超级用户权限。</p><p>注意二进制文件名必须为 <code>ruyi</code>。</p><h2 id="使用系统包管理器安装" tabindex="-1">使用系统包管理器安装 <a class="header-anchor" href="#使用系统包管理器安装" aria-label="Permalink to &quot;使用系统包管理器安装&quot;">​</a></h2><p>目前 Arch Linux 用户可以使用系统包管理器安装和卸载 Ruyi 包管理器，相对于使用预编译的二进制安装，维护更加便利；使用系统 Python 也可以获得更好的性能。</p><p>从 AUR 安装，以 <code>yay</code> 为例，注意应当使用普通用户：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yay</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span></span></code></pre></div><p>从 Arch Linux CN 软件源安装，以 ISCAS 开源镜像站为例添加配置：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[archlinuxcn]</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://mirror.iscas.ac.cn/archlinuxcn/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$arch</span></span></code></pre></div><p>使用 <code>pacman</code> 安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -Sy</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pacman</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -S</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span></span></code></pre></div><h2 id="验证你的安装" tabindex="-1">验证你的安装 <a class="header-anchor" href="#验证你的安装" aria-label="Permalink to &quot;验证你的安装&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> version</span></span></code></pre></div><p>命令应当可以正常运行并打印版本和 Copyright 信息，如果失败请检查系统环境或重新尝试安装。</p><h2 id="开始使用" tabindex="-1">开始使用 <a class="header-anchor" href="#开始使用" aria-label="Permalink to &quot;开始使用&quot;">​</a></h2><p>至此 Ruyi 包管理器已经成功安装在您的系统中。可以从 Ruyi 本身帮助信息中了解使用方法，或继续阅读本文档。</p><p>列出帮助信息：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --help</span></span></code></pre></div>`,35)]))}const g=a(h,[["render",n]]);export{k as __pageData,g as default};
