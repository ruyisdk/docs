import{_ as r,c as d,a2 as e,o as a}from"./chunks/framework.DxHMuem5.js";const c=JSON.parse('{"title":"RuyiSDK 编译工具","description":"","frontmatter":{},"headers":[],"relativePath":"zh/Other/GNU-type.md","filePath":"zh/Other/GNU-type.md","lastUpdated":1735203552000}'),i={name:"zh/Other/GNU-type.md"};function s(o,t,l,n,u,h){return a(),d("div",null,t[0]||(t[0]=[e('<h1 id="ruyisdk-编译工具" tabindex="-1">RuyiSDK 编译工具 <a class="header-anchor" href="#ruyisdk-编译工具" aria-label="Permalink to &quot;RuyiSDK 编译工具&quot;">​</a></h1><h3 id="ruyisdk-提供的编译工具链" tabindex="-1">RuyiSDK 提供的编译工具链 <a class="header-anchor" href="#ruyisdk-提供的编译工具链" aria-label="Permalink to &quot;RuyiSDK 提供的编译工具链&quot;">​</a></h3><p>RuyiSDK 提供了多种类型的编译工具链，适用于不同的 RISC-V 开发板和应用场景。</p><table tabindex="0"><thead><tr><th>编译工具链类型</th><th>说明</th><th>相关链接</th></tr></thead><tbody><tr><td><strong>GNU 工具链</strong></td><td></td><td><a href="https://github.com/RuyiSDK/riscv-gnu-toolchain" target="_blank" rel="noreferrer">仓库</a></td></tr><tr><td>gnu-upstream</td><td>标准 GNU 工具链</td><td></td></tr><tr><td>gnu-plct</td><td>支持香山南湖微架构 &#39;gnu-plct(&gt;=0.20240324.0)&#39;</td><td></td></tr><tr><td>gnu-plct-xthead</td><td>适用于玄铁</td><td></td></tr><tr><td>gnu-plct-rv64ilp32-elf</td><td>非通用工具链，支持 rv64ilp32 的裸机工具链，目标代码格式是 elf</td><td><a href="https://github.com/RuyiSDK/riscv-gnu-toolchain-rv64ilp32" target="_blank" rel="noreferrer">仓库</a><br><a href="https://mp.weixin.qq.com/s/argIGP4_rUKDm9IRIB-YTg" target="_blank" rel="noreferrer">文章</a></td></tr><tr><td>gnu-milkv-milkv-duo-bin</td><td>milkv 相关工具链，此为 glibc，还有 elf 和 musl 两个分支</td><td></td></tr><tr><td><strong>LLVM 工具链</strong></td><td></td><td></td></tr><tr><td>llvm-upstream</td><td></td><td></td></tr><tr><td><strong>QEMU 模拟器</strong></td><td></td><td><a href="https://github.com/ruyisdk/qemu" target="_blank" rel="noreferrer">仓库</a></td></tr><tr><td>qemu-system-riscv-upstream</td><td></td><td></td></tr><tr><td>qemu-user-riscv-upstream</td><td></td><td></td></tr><tr><td>qemu-user-riscv-xthead</td><td></td><td></td></tr><tr><td>box64-upstream</td><td></td><td></td></tr></tbody></table><h3 id="编译工具链的多样性" tabindex="-1">编译工具链的多样性 <a class="header-anchor" href="#编译工具链的多样性" aria-label="Permalink to &quot;编译工具链的多样性&quot;">​</a></h3><p>如上表，目前 RuyiSDK 编译工具链由于能够实现不同扩展指令集，进而有了不同版本的情况，这也就使得编译工具链具有多样性。 原因有以下几点：</p><ol><li><strong>处理器架构发展</strong>：处理器架构在不断更新迭代的过程中会引进新的指令集扩展以满足不同的需求，为使得这部分新的指令集扩展能够充分运用，编译工具链也会随之进行更新，出现不同的版本。</li><li><strong>厂商定制优化</strong>：不同的厂商会针对同一个指令集进行不同程度的定制化，进而对编译工具链进行定制化。</li><li><strong>标准和规范的演进</strong>：扩展指令集虽被规范化，但不同版本的工具链在相同标准下也会体现出不同的性能、稳定性以及兼容性。</li><li><strong>特定应用需求</strong>：不同的应用领域对扩展指令集有不同的需求，如嵌入式系统、机器学习、图像处理等，不同版本编译工具链会针对特定领域进行优化。</li></ol><p>上述原因使得编译工具链出现了多样化，这样的多样化为开发者提供了更多的选择，满足更加复杂的开发场景。</p>',8)]))}const g=r(i,[["render",s]]);export{c as __pageData,g as default};
