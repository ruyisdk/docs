import{_ as a,c as t,a2 as i,o}from"./chunks/framework.DxHMuem5.js";const x=JSON.parse('{"title":"RuyiSDK使用示例","description":"","frontmatter":{},"headers":[],"relativePath":"old/usecase/index.md","filePath":"old/usecase/index.md","lastUpdated":1735203552000}'),r={name:"old/usecase/index.md"};function s(d,e,n,p,c,l){return o(),t("div",null,e[0]||(e[0]=[i('<h1 id="ruyisdk使用示例" tabindex="-1">RuyiSDK使用示例 <a class="header-anchor" href="#ruyisdk使用示例" aria-label="Permalink to &quot;RuyiSDK使用示例&quot;">​</a></h1><p>以下案例是使用RuyiSDK搭建相关的开发或运行环境来实现的。希望通过一些小场景让大家更多的了解RuyiSDK的使用。</p><blockquote><p>除了这里列举的环境外，RuyiSDK支持的编译工具链版本、RISC-V开发板类型是丰富且不断扩展的，这里未列举所有的情况，这些典型的场景供新用户参考和体验。</p></blockquote><p><a href="./x86pc/index.html">案例一：x86_64 上交叉编译并模拟运行 riscv64 可执行程序</a></p><p><a href="./setupos/index.html">案例二：在x86_64 PC+linux 上，接入RISC-V开发板并为其安装系统镜像</a></p><p><a href="./rvbook/index.html">案例三：RISC-V 开发板上本地编译并运行 riscv64 可执行程序</a></p>',6)]))}const h=a(r,[["render",s]]);export{x as __pageData,h as default};
