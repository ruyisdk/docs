import{_ as e,c as i,a2 as r,o as l}from"./chunks/framework.DxHMuem5.js";const t="/docs/assets/ruyisdk.DlLqNkX-.png",k=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"old/introduction/index.md","filePath":"old/introduction/index.md","lastUpdated":1735203552000}'),s={name:"old/introduction/index.md"};function n(o,a,h,p,d,c){return l(),i("div",null,a[0]||(a[0]=[r(`<h2 id="hello-ruyi" tabindex="-1">Hello Ruyi <a class="header-anchor" href="#hello-ruyi" aria-label="Permalink to &quot;Hello Ruyi&quot;">​</a></h2><p>欢迎来到 <a href="https://github.com/ruyisdk" target="_blank" rel="noreferrer">RuyiSDK</a> 相关介绍内容，以下是本文相关内容：</p><blockquote><ol><li><a href="##介绍">什么是 RuyiSDK</a></li><li><a href="##背景">为什么会有 RuyiSDK</a></li><li><a href="##功能">RuyiSDK 有什么用</a></li><li><a href="##支持的设备">我可以在什么设备上运行</a></li><li><a href="##RuyiSDK-架构示意图">RuyiSDK 的原理是什么</a></li><li><a href="##让我们开始吧！">我该从何开始</a></li></ol></blockquote><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>RuyiSDK 是一个由中科院软件所（ISCAS）所启动的开源项目，该项目旨在为 RISC-V 开发者提供一个便捷、完善的开发环境。其提供了相关最新的硬件信息、软件支持，例如在[支持的设备](## 支持的设备)中有提供相关支持硬件情况；软件层面提供了镜像（如 <a href="https://github.com/ruyisdk/revyos" target="_blank" rel="noreferrer">RevyOS</a>）、工具链、包管理器等。</p><p>其最终目标是希望为 RISC-V 开发者提供一个完善、便捷的开发环境，使得 RISC-V 成为主流架构，以及建设并运营一个完善的社区以便开发者交流。最终希望 RuyiSDK 可以走向国际化，为全球的 RISC-V 开发者提供开发的便捷。</p><h2 id="背景" tabindex="-1">背景 <a class="header-anchor" href="#背景" aria-label="Permalink to &quot;背景&quot;">​</a></h2><p>RISC-V 是第五代精简指令集，由加州伯克利分校所发起的一个开源项目，相比 Cisc 而言更具精简性，指令执行效率更高。开源使其能够更加方便的运用在不同的领域，目前在 IoT、智能家居、芯片设计、操作系统、软件开发等领域都有应用。</p><p>而在过往针对 RISC-V 的开发面临的问题在于相关资讯没有统一的平台，使得开发者从最开始的学习、再到开发应用的效率大幅降低，而 RuyiSDK 的出现就是为了解决这些问题。</p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><p>RuyiSDK 分为以下三个部分：</p><h3 id="ruyi-包管理器" tabindex="-1">Ruyi 包管理器 <a class="header-anchor" href="#ruyi-包管理器" aria-label="Permalink to &quot;Ruyi 包管理器&quot;">​</a></h3><p>该包管理器是一个在线的软件源，在该包管理器中，我们提供了如下内容：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>1. 工具链</span></span>
<span class="line"><span>2. 调试工具</span></span>
<span class="line"><span>3. 模拟器</span></span>
<span class="line"><span>4. 运行环境</span></span>
<span class="line"><span>5. 文档</span></span>
<span class="line"><span>6. 源码</span></span>
<span class="line"><span>7. 工具、系统镜像</span></span>
<span class="line"><span>8. GUI（TODO）</span></span></code></pre></div><h3 id="ruyi-ide" tabindex="-1">Ruyi IDE <a class="header-anchor" href="#ruyi-ide" aria-label="Permalink to &quot;Ruyi IDE&quot;">​</a></h3><p>该 IDE 是一个为 RISC-V 架构设计的开发工具箱，开发者可以轻松的通过 Ruyi 包管理器获取，可以对于实际的开发场景对于代码的编写以及调试。 使用包管理器开发者可以获取该工具箱中的编译工具链、调试工具和模拟器，开发者可以使用模拟器或者在 RISC-V 开发板上对自身的程序进行编写以及调试。</p><h3 id="community" tabindex="-1">Community <a class="header-anchor" href="#community" aria-label="Permalink to &quot;Community&quot;">​</a></h3><p>在我们的社区当中，提供了大量的相关技术文章、代码、教程视频，以及我们会举办一定的线下活动获得来自用户的反馈，在线上也会有相应的论坛提供给开发者进行技术交流。</p><hr><p>RuyiSDK 对 RISC-V 设备的集成和支持主要包括以下几个方面：</p><ol><li>RISC-V 开发板镜像相关信息以及下载、安装教程，便于开发者获取相关镜像（换而言之提供一个镜像站），其中涵盖多种操作系统（如基于 Debian 的 RevyOS、openEuler riscv64等）提供给开发者使用。</li><li>提供 RISC-V 开发板对应的演示程序、开发资料和相关工具（含适用的编译工具链、模拟器等）的信息维护和下载，方便 RISC-V 开发者快速上手。</li><li>在集成开发环境中增加 RISC-V 设备专有向导页面、实现开发环境和运行环境的文件传输、支持在 RISC-V 设备上调试应用程序等。</li></ol><h2 id="支持的设备" tabindex="-1">支持的设备 <a class="header-anchor" href="#支持的设备" aria-label="Permalink to &quot;支持的设备&quot;">​</a></h2><p>目前 RuyiSDK 支持的设备如下：</p><ol><li><a href="https://d1.docs.aw-ol.com/d1_dev/" target="_blank" rel="noreferrer">Allwinner Nezha D1</a>：适用于入门级开发和教育用途。</li><li><a href="https://www.canaan-creative.com/product/k230/" target="_blank" rel="noreferrer">Canaan Kendryte K230</a>：专为 AI 应用设计。</li><li><a href="https://milkv.io/zh/duo" target="_blank" rel="noreferrer">Milk-V Duo</a>：小巧灵活，适合嵌入式应用。</li><li><a href="https://milkv.io/zh/duo-s" target="_blank" rel="noreferrer">Milk-V Duo S</a>：提供更强的处理能力。</li><li><a href="https://milkv.io/zh/mars" target="_blank" rel="noreferrer">Milk-V Mars</a>：适合物联网应用。</li><li><a href="https://milkv.io/zh/mars-cm" target="_blank" rel="noreferrer">Milk-V Mars CM</a>：集成多种通信接口。</li><li><a href="https://milkv.io/zh/meles" target="_blank" rel="noreferrer">Milk-V Meles</a>：高性能嵌入式开发。</li><li><a href="https://milkv.io/zh/pioneer" target="_blank" rel="noreferrer">Milk-V Pioneer Box</a>：适用于边缘计算。</li><li><a href="https://milkv.io/zh/vega" target="_blank" rel="noreferrer">Milk-V Vega</a>：高性能计算设备。</li><li><a href="https://www.sifive.com/boards/hifive-unmatched" target="_blank" rel="noreferrer">SiFive HiFive Unmatched</a>：适合高性能开发和研究。</li><li><a href="https://wiki.sipeed.com/hardware/en/lichee/RV/RV.html" target="_blank" rel="noreferrer">Sipeed Lichee RV</a>：适合入门和教育。</li><li><a href="https://wiki.sipeed.com/hardware/en/lichee/th1520/lpi4a/1_intro.html" target="_blank" rel="noreferrer">Sipeed LicheePi 4A</a>：提供更高的性能和更多的接口。</li><li><a href="https://www.starfivetech.com/site/boards" target="_blank" rel="noreferrer">StarFive VisionFive</a>：支持多种 AI 和物联网应用。</li><li><a href="https://www.starfivetech.com/site/boards" target="_blank" rel="noreferrer">StarFive VisionFive2</a>：升级版，提供更强的计算能力。</li></ol><blockquote><p>文档可能更新不及时，查看最新支持的设备请通过指令<code>ruyi device provision</code>查询。</p></blockquote><h2 id="ruyisdk-架构示意图" tabindex="-1">RuyiSDK-架构示意图 <a class="header-anchor" href="#ruyisdk-架构示意图" aria-label="Permalink to &quot;RuyiSDK-架构示意图&quot;">​</a></h2><p><img src="`+t+'" alt="image"></p><h2 id="让我们开始吧" tabindex="-1">让我们开始吧！ <a class="header-anchor" href="#让我们开始吧" aria-label="Permalink to &quot;让我们开始吧！&quot;">​</a></h2><p>从 RuyiSDK 开始使用设备！</p><h3 id="获取并安装os" tabindex="-1">获取并安装OS <a class="header-anchor" href="#获取并安装os" aria-label="Permalink to &quot;获取并安装OS&quot;">​</a></h3><p>开始的第一步：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provision</span></span></code></pre></div><p>该指令会识别硬件信息，并且开始自动执行对应程序为用户自动部署 RISC-V 开发环境，按照引导信息一步步执行即可。</p>',33)]))}const f=e(s,[["render",n]]);export{k as __pageData,f as default};
