import{_ as e,c as a,a2 as l,o as s}from"./chunks/framework.DxHMuem5.js";const u=JSON.parse('{"title":"RuyiSDK集成的RISC-V设备","description":"","frontmatter":{},"headers":[],"relativePath":"old/devices/index.md","filePath":"old/devices/index.md","lastUpdated":1735203552000}'),t={name:"old/devices/index.md"};function r(o,i,n,d,h,c){return s(),a("div",null,i[0]||(i[0]=[l('<h1 id="ruyisdk集成的risc-v设备" tabindex="-1">RuyiSDK集成的RISC-V设备 <a class="header-anchor" href="#ruyisdk集成的risc-v设备" aria-label="Permalink to &quot;RuyiSDK集成的RISC-V设备&quot;">​</a></h1><p>RuyiSDK对RISC-V设备的集成和支持主要包括以下几个方面：</p><ol><li>提供RISC-V 开发板适用镜像信息维护与下载、开发板系统安装引导程序，方便 RISC-V 开发者获取指定开发板可用的OS并可方便的安装OS的安装。RuyiSDK集成了多种可用的操作系统供用户选择。</li><li>提供RISC-V 开发板对应的演示程序、开发资料和相关工具（含适用的编译工具链、模拟器等）的信息维护和下载，方便 RISC-V 开发者快速上手。</li><li>在集成开发环境中增加RISC-V设备专有向导页面、实现开发环境和运行环境的文件传输、支持在RISC-V设备上调试应用程序等。</li></ol><h2 id="支持的risc-v设备" tabindex="-1">支持的RISC-V设备 <a class="header-anchor" href="#支持的risc-v设备" aria-label="Permalink to &quot;支持的RISC-V设备&quot;">​</a></h2><p>目前对硬件设备的集成主要体现在包管理器（设备安装器），可以通过 <code>ruyi device provision</code>命令查询，已经集成的RISC-V设备有：</p><ol><li>Allwinner Nezha D1</li><li>Canaan Kendryte K230</li><li>Milk-V Duo</li><li>Milk-V Duo S</li><li>Milk-V Mars</li><li>Milk-V Mars CM</li><li>Milk-V Meles</li><li>Milk-V Pioneer Box</li><li>Milk-V Vega</li><li>SiFive HiFive Unmatched</li><li>Sipeed Lichee RV</li><li>Sipeed LicheePi 4A</li><li>StarFive VisionFive</li><li>StarFive VisionFive2</li></ol><h2 id="从ruyisdk开始使用设备" tabindex="-1">从RuyiSDK开始使用设备 <a class="header-anchor" href="#从ruyisdk开始使用设备" aria-label="Permalink to &quot;从RuyiSDK开始使用设备&quot;">​</a></h2><h3 id="获取并安装os" tabindex="-1">获取并安装OS <a class="header-anchor" href="#获取并安装os" aria-label="Permalink to &quot;获取并安装OS&quot;">​</a></h3><p>可以通过下载安装最新的 ruyi 包管理器工具并执行以下命令为设备安装系统：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ruyi</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> provision</span></span></code></pre></div><p>按照引导信息一步步执行即可。</p>',11)]))}const k=e(t,[["render",r]]);export{u as __pageData,k as default};
